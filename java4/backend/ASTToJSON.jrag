aspect Converter {

	public class Counter {
		private static HashMap<ASTNode,Integer> IDS = new HashMap<ASTNode, Integer>();
		private static int CURRENT_ID = 0;
		public static int getId(ASTNode n) {
			Integer id = IDS.get(n);
			if (id==null) {
				id = CURRENT_ID++;
				IDS.put(n, id);
			}
			return id;
		}
	}

	public void CompilationUnit.process(){


		String tree = toJSON(0);
		String fileAST = pathName().substring(0, pathName().length()-5)+"AST.txt";

		try{
			File treeDump = new File(fileAST);
			FileOutputStream fos = new FileOutputStream(fileAST);
			DataOutputStream outAST = new DataOutputStream(new BufferedOutputStream(fos));
			outAST.writeBytes(tree);
			outAST.close();
		} catch (Exception e){
			e.printStackTrace();
		}

	}


	public String ASTNode.toJSON(int depth){
		String finalString = "{\"id\": "+Counter.getId(this)+", \"type\": \"";
		finalString+=getClass()+"\", \"position\": {\"start_line\": ";
		finalString+=startLine()+", \"start_column\": "+startColumn()+ ", \"end_line\": ";
		finalString+=endLine()+", \"end_column\": "+endColumn()+"}, \"children\": [ ";


		if(children != null) {
			for(int i = 0; i < numChildren; i++){
				ASTNode currentChild = children[i];

				String temp = currentChild.toJSON(++depth);

				if(i == numChildren-1){
					finalString += temp;
				} else {
					finalString += temp + ", ";
				}
			}
		}

		finalString+="] }";
		return finalString;
	}
}
